//
//  Prefix header
//
//  The contents of this file are implicitly included at the beginning of every source file.
//

#import <Availability.h>

#ifndef __IPHONE_5_0
#warning "This project uses features only available in iOS SDK 5.0 and later."
#endif

#ifdef __OBJC__
    #import <UIKit/UIKit.h>
    #import <Foundation/Foundation.h>
    #import <SystemConfiguration/SystemConfiguration.h>
    #import <MobileCoreServices/MobileCoreServices.h>
    #import <CoreGraphics/CoreGraphics.h>
    #import <QuartzCore/QuartzCore.h>
    #import <EventKit/EventKit.h>
    #import <CoreLocation/CoreLocation.h>
    #import <MapKit/MapKit.h>
    #import <StoreKit/StoreKit.h>
    #import <iAd/iAd.h>

    #import "Lumberjack.h"
    #import "Reachability.h"

    #import "Constants.h"
    #import "UserDefaultsManager.h"

    #import "NSString+ISO8601Date.h"
    #import "NSDate+ISO8601Date.h"
    #import "NSString+URLEncoding.h"
    #import "UIImage+fixOrientation.h"
    #import "CLPlacemark+MKAnnotationDelegate.h"
    #import "UINavigationController+StausBarStyle.h"

    #import <Social/Social.h>
    #import <Accounts/Accounts.h>
    #import <MessageUI/MessageUI.h>

    #pragma GCC diagnostic push
    #pragma GCC diagnostic ignored "-Wunused-variable"
    #ifdef DEBUG
    static int ddLogLevel = LOG_LEVEL_VERBOSE;
    #else
    static int ddLogLevel = LOG_LEVEL_OFF;
    #endif
    
    #pragma GCC diagnostic pop

    #import <CoreData/CoreData.h>

    #define kAPIHost @"weatherfrog.info"
    #define kAPIBaseUrl @"http://api.weatherfrog.info/1/"

    #define IAP_fullmode @"weatherfrog2.fullmode"

    // check device orientation
    #define kDeviceOrientation [[UIDevice currentDevice] orientation]
    #define isPortrait  UIDeviceOrientationIsPortrait(kDeviceOrientation)
    #define isLandscape UIDeviceOrientationIsLandscape(kDeviceOrientation)
    #define isFaceUp    kDeviceOrientation == UIDeviceOrientationFaceUp   ? YES : NO
    #define isFaceDown  kDeviceOrientation == UIDeviceOrientationFaceDown ? YES : NO
    #define ASSET_BY_SCREEN_HEIGHT(regular, longScreen) (([[UIScreen mainScreen] bounds].size.height <= 480.0) ? regular : longScreen)

#endif
